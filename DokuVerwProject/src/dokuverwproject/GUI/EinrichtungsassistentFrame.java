/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dokuverwproject.GUI;

import dokuverwproject.DB.DBConn;
import static dokuverwproject.commons.Common.initExternalFrame;
import java.awt.Color;
import java.io.File;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.Statement;

/**
 *
 * @author Giuseppe
 */
public class EinrichtungsassistentFrame extends javax.swing.JFrame {
    
    /**
     * Datenverbindung
     */
    private String host = "";
    private String port = "";
    private String nameDatenbank = "";
    private String benutzername = "";
    private String passwort = "";

    /**
     * Creates new form EinrichtungGui
     */
    public EinrichtungsassistentFrame() {
        initComponents();
        
        initExternalFrame(this, "../img/setup.png");
        
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jTextField10 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jTextField7 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPasswordField3 = new javax.swing.JPasswordField();
        jPasswordField4 = new javax.swing.JPasswordField();
        jButton8 = new javax.swing.JButton();
        jTextField11 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Einrichtungsassistent - DATEGT");
        setAlwaysOnTop(true);
        setResizable(false);

        jPanel2.setBackground(java.awt.SystemColor.controlHighlight);
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/barberisoftware/barberi/img/setup.png"))); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Datenbankverbindung"));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("ip/Host:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Benutzername:");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Passwort:");

        jTextField1.setText("localhost");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Verbindung testen"));

        jLabel8.setText("Status:");

        jTextField6.setEditable(false);
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField6.setText("nicht verbunden");

        jButton1.setText("Testen");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextField4.setText("root");

        jTextField10.setText("dategt_dokuverw");

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Datenbank:");

        jTextField12.setText("3306");

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Port:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField4)
                            .addComponent(jTextField1)
                            .addComponent(jPasswordField1)
                            .addComponent(jTextField10)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField12)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Datenbankstruktur"));
        jPanel6.setEnabled(false);

        jTextField7.setEditable(false);
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField7.setText("nicht verbunden");

        jLabel9.setText("Status:");
        jLabel9.setEnabled(false);

        jButton2.setText("Anlegen");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Überprüfen");
        jButton3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField7))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Datebank", jPanel3);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Administrator-Account anlegen"));
        jPanel12.setEnabled(false);

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Benutzername:");
        jLabel15.setEnabled(false);

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Passwort:");
        jLabel16.setEnabled(false);

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Passwort wdh.:");
        jLabel17.setEnabled(false);

        jTextField3.setEnabled(false);

        jPasswordField3.setEnabled(false);

        jPasswordField4.setEnabled(false);

        jButton8.setText("Account anlegen");
        jButton8.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton8.setEnabled(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jTextField11.setEnabled(false);

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Name:");
        jLabel20.setEnabled(false);

        jTextField13.setEnabled(false);
        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("Vorname:");
        jLabel21.setEnabled(false);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addGap(0, 467, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
                            .addComponent(jPasswordField3)
                            .addComponent(jPasswordField4)
                            .addComponent(jTextField11)
                            .addComponent(jTextField13))))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(26, 26, 26)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Account anlegen", jPanel11);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dokuverwproject/IMG/tick.png"))); // NOI18N
        jButton6.setText("Einstellungen speichern und DATEGT starten");
        jButton6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton6.setEnabled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(326, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Beenden", jPanel10);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 51));
        jLabel10.setText("DATEGT");

        jLabel4.setText("Dokumentenverwaltung");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dokuverwproject/IMG/setup.png"))); // NOI18N
        jLabel5.setText("Einrichtungsassistent");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel4))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel5))
                        .addGap(0, 0, 0)
                        .addComponent(jLabel4)))
                .addGap(0, 0, 0)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        saveAndClose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        createRootUser();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        checkDatenbankstruktur();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        createDatabaseStructure();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        testDBConnection();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    public void testDBConnection() {
        enableBereichDatenbankstruktur(false);
        jTextField6.setText("Bitte warten...");
        jTextField6.setBackground(new Color(240,240,240));

        this.host = jTextField1.getText();
        this.port = jTextField12.getText();
        this.nameDatenbank = jTextField10.getText();
        this.benutzername = jTextField4.getText();
        this.passwort = jPasswordField1.getText();
        
        if(!host.equals("") && !host.equals(null) && !nameDatenbank.equals("") && !nameDatenbank.equals(null)) {
            DBConn db = new DBConn(host, port, nameDatenbank, benutzername, passwort);
            Connection con = db.getConnection();

            if(con != null) {
                enableBereichDatenbankstruktur(true);
                jTextField6.setText("Verbindung zur Datenbank hergestellt!");
                jTextField6.setBackground(new Color(204,255,204));
                
                jTextField7.setText("Mit Datenbank verbunden!");
                jTextField7.setBackground(new Color(240,240,240));
            } else {
                enableBereichDatenbankstruktur(false);
                jTextField6.setText("Fehler beim Verbinden mit der Datenbank!");
                jTextField6.setBackground(new Color(255,204,204));
                
                jTextField7.setText("Nicht mit der Datenbank verbunden.");
                jTextField7.setBackground(new Color(240,240,240));
            }
        } else {
            enableBereichDatenbankstruktur(false);
            jTextField6.setText("Bitte alle nötigen Felder ausfüllen!");
            jTextField6.setBackground(new Color(255,204,204));
            
            jTextField7.setText("Nicht mit der Datenbank verbunden.");
            jTextField7.setBackground(new Color(240,240,240));
        }
    }
   
     public void enableBereichDatenbankstruktur(boolean enable) {
        jPanel6.setEnabled(enable);
        jLabel9.setEnabled(enable);
        jTextField7.setEnabled(enable);
        jButton2.setEnabled(enable);
        jButton3.setEnabled(enable);
    }
   
    public void enableAccountBereich(boolean enable) {
        jPanel12.setEnabled(enable);
        jLabel15.setEnabled(enable);
        jLabel16.setEnabled(enable);
        jLabel17.setEnabled(enable);
        jLabel19.setEnabled(enable);
        jLabel20.setEnabled(enable);
        jLabel21.setEnabled(enable);
        jTextField12.setEnabled(enable);
        jTextField13.setEnabled(enable);
        jTextField11.setEnabled(enable);
        jTextField3.setEnabled(enable);
        jPasswordField4.setEnabled(enable);
        jPasswordField3.setEnabled(enable);
        jButton8.setEnabled(enable);
    }
   
    public void checkDatenbankstruktur(){
        testDBConnection();
        
        int datenbankFehlerhaft = 0;
        
        CreateConnection cc = new CreateConnection(hostDatenbank, nameDatenbank, benutzernameDatenbank, passwortDatenbank);
        Connection con = cc.getConnection();
        
        Statement stmt = null;
        
        try{
            DatabaseMetaData dbm = con.getMetaData();
            
            ResultSet tableAccounts = dbm.getTables(null, null, "accounts", null);
            if (tableAccounts.next()) { //if table exists
                datenbankFehlerhaft ++;
            }
            
            ResultSet tableAkten = dbm.getTables(null, null, "akten", null);
            if (tableAkten.next()) { //if table exists
                datenbankFehlerhaft ++;
            }
            
            ResultSet tableAufgaben = dbm.getTables(null, null, "aufgaben", null);
            if (tableAufgaben.next()) { //if table exists
                datenbankFehlerhaft ++;
            }
            
            ResultSet tableFristen = dbm.getTables(null, null, "fristen", null);
            if (tableFristen.next()) { //if table exists
                datenbankFehlerhaft ++;
            }
            
            ResultSet tableLoginlog = dbm.getTables(null, null, "loginlog", null);
            if (tableLoginlog.next()) { //if table exists
                datenbankFehlerhaft ++;
            }
            
        } catch(Exception e) {
            System.out.println(e.toString());
            jTextField7.setText(e.toString());
            jTextField7.setBackground(new Color(255,204,204));
        }
        
        if(datenbankFehlerhaft == 5) {
            jTextField7.setText("Datenbankstruktur überprüft und in Ordnung!");
            jTextField7.setBackground(new Color(204,255,204));
            enableAccountBereich(true);
            enableBereichSpeicher(true);
            jTabbedPane1.setSelectedIndex(1);
        } else {
            jTextField7.setText("Datenbankstruktur fehlerhaft! Bitte 'anlegen' zur Reparatur klicken.");
            jTextField7.setBackground(new Color(255,204,204));
        }
       
       
    }
   
    public void deleteDatabaseStructure() {
        testDBConnection();
        
        if(deleteDatenbankstrukturSicherheitsueberpruefung == 0) {
            deleteDatenbankstrukturSicherheitsueberpruefung = 3;
            
            CreateConnection cc = new CreateConnection(hostDatenbank, nameDatenbank, benutzernameDatenbank, passwortDatenbank);
            Connection con = cc.getConnection();

            Statement stmt = null;

            try{
                DatabaseMetaData dbm = con.getMetaData();

                ResultSet tableAccounts = dbm.getTables(null, null, "accounts", null);
                if (tableAccounts.next()) { //if table exists
                    String query = "DROP TABLE `accounts`";
                    try{
                        stmt = con.createStatement();
                        stmt.executeUpdate(query);
                        stmt.close();

                    } catch(Exception e){
                        System.out.println(e.toString());
                    }
                }

                ResultSet tableAkten = dbm.getTables(null, null, "akten", null);
                if (tableAkten.next()) { //if table exists
                    String query = "DROP TABLE `akten`";
                    try{
                        stmt = con.createStatement();
                        stmt.executeUpdate(query);
                        stmt.close();

                    } catch(Exception e){
                        System.out.println(e.toString());
                    }
                }

                ResultSet tableAufgaben = dbm.getTables(null, null, "aufgaben", null);
                if (tableAufgaben.next()) { //if table exists
                    String query = "DROP TABLE `aufgaben`";
                    try{
                        stmt = con.createStatement();
                        stmt.executeUpdate(query);
                        stmt.close();

                    } catch(Exception e){
                        System.out.println(e.toString());
                    }
                }

                ResultSet tableFristen = dbm.getTables(null, null, "fristen", null);
                if (tableFristen.next()) { //if table exists
                    String query = "DROP TABLE `fristen`";
                    try{
                        stmt = con.createStatement();
                        stmt.executeUpdate(query);
                        stmt.close();

                    } catch(Exception e){
                        System.out.println(e.toString());
                    }
                }
                
                ResultSet tableLoginlog = dbm.getTables(null, null, "loginlog", null);
                if (tableLoginlog.next()) { //if table exists
                    String query = "DROP TABLE `loginlog`";
                    try{
                        stmt = con.createStatement();
                        stmt.executeUpdate(query);
                        stmt.close();

                    } catch(Exception e){
                        System.out.println(e.toString());
                    }
                }

                jTextField7.setText("Datenbankstruktur gelöscht!");
                jTextField7.setBackground(new Color(255,204,102));
            } catch(Exception e) {
                System.out.println(e.toString());
                jTextField7.setText(e.toString());
                jTextField7.setBackground(new Color(255,204,204));
            }
            
        } else {
            deleteDatenbankstrukturSicherheitsueberpruefung --;
            jTextField7.setText("Fortfahren? Alle Daten werden gelöscht. Noch " + (deleteDatenbankstrukturSicherheitsueberpruefung + 1) + " mal erneut klicken.");
            jTextField7.setBackground(new Color(255,204,204));
        }
    }
   
    public void createDatabaseStructure() {
        testDBConnection();
        
        CreateConnection cc = new CreateConnection(hostDatenbank, nameDatenbank, benutzernameDatenbank, passwortDatenbank);
        Connection con = cc.getConnection();
        
        Statement stmt = null;
        
        try{
            DatabaseMetaData dbm = con.getMetaData();
            
            ResultSet tableAccounts = dbm.getTables(null, null, "accounts", null);
            if (!tableAccounts.next()) { //if table does not exist
                String query = "CREATE TABLE `accounts` (`id` int(11) NOT NULL AUTO_INCREMENT,`benutzername` text NOT NULL,`name` text NOT NULL,`vorname` text NOT NULL,`status` int(11) NOT NULL,`kennwort` text NOT NULL,`notizen` text NOT NULL,`anlagedatum` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,`erfasser` int(11) NOT NULL, PRIMARY KEY(id));";
                try{
                    stmt = con.createStatement();
                    stmt.executeUpdate(query);
                    stmt.close();

                } catch(Exception e){
                    System.out.println(e.toString());
                }
            }
            
            ResultSet tableAkten = dbm.getTables(null, null, "akten", null);
            if (!tableAkten.next()) { //if table does not exist
                String query = "CREATE TABLE `akten` (`id` int(11) NOT NULL AUTO_INCREMENT,`titel` text NOT NULL,`bearbeiter` int(11) NOT NULL,`anlagedatum` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,`erfasser` int(11) NOT NULL,`ablagenummer` text NOT NULL,`notizen` text NOT NULL,`pfad` text NOT NULL, PRIMARY KEY(id));";
                try{
                    stmt = con.createStatement();
                    stmt.executeUpdate(query);
                    stmt.close();

                } catch(Exception e){
                    System.out.println(e.toString());
                }
            }
            
            ResultSet tableAufgaben = dbm.getTables(null, null, "aufgaben", null);
            if (!tableAufgaben.next()) { //if table does not exist
                String query = "CREATE TABLE `aufgaben` (`id` int(11) NOT NULL AUTO_INCREMENT,`titel` text NOT NULL,`frist` date NOT NULL,`status` int(11) NOT NULL,`notizen` text NOT NULL,`bearbeiter` int(11) NOT NULL,`anlagedatum` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,`erfasser` int(11) NOT NULL, PRIMARY KEY(id));";
                try{
                    stmt = con.createStatement();
                    stmt.executeUpdate(query);
                    stmt.close();

                } catch(Exception e){
                    System.out.println(e.toString());
                }
            }
            
            ResultSet tableFristen = dbm.getTables(null, null, "fristen", null);
            if (!tableFristen.next()) { //if table does not exist
                String query = "CREATE TABLE `fristen` (`id` int(11) NOT NULL AUTO_INCREMENT,`titel` text NOT NULL,`frist` date NOT NULL,`status` int(11) NOT NULL,`notizen` text NOT NULL,`bearbeiter` int(11) NOT NULL,`anlagedatum` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,`erfasser` int(11) NOT NULL, PRIMARY KEY(id));";
                try{
                    stmt = con.createStatement();
                    stmt.executeUpdate(query);
                    stmt.close();

                } catch(Exception e){
                    System.out.println(e.toString());
                }
            }
            
            ResultSet tableLoginlog = dbm.getTables(null, null, "loginlog", null);
            if (!tableLoginlog.next()) { //if table does not exist
                String query = "CREATE TABLE `loginlog` (`id` int(11) NOT NULL AUTO_INCREMENT, `account` int(11) NOT NULL, `terminal` text NOT NULL, `zeitstempel` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY(id));";
                try{
                    stmt = con.createStatement();
                    stmt.executeUpdate(query);
                    stmt.close();

                } catch(Exception e){
                    System.out.println(e.toString());
                }
            }
            
            jTextField7.setText("Datenbankstruktur angelegt!");
            jTextField7.setBackground(new Color(204,255,204));
            enableAccountBereich(true);
            enableBereichSpeicher(true);
            jTabbedPane1.setSelectedIndex(1);
        } catch(Exception e) {
            System.out.println(e.toString());
            jTextField7.setText(e.toString());
            jTextField7.setBackground(new Color(255,204,204));
        }
        
    }
   
    public void createRootUser() {
        String benutzername = jTextField3.getText();
        String passwort = jPasswordField4.getText();
        String passwortwdh = jPasswordField3.getText();
        String name = jTextField11.getText();
        String vorname = jTextField13.getText();
        String notizen = jTextArea1.getText();
        
        if(!benutzername.equals("") && !benutzername.equals(null) && !passwort.equals("") && !passwort.equals(null) && !passwortwdh.equals("") && !passwortwdh.equals(null) && !name.equals("") && !name.equals(null) && !vorname.equals("") && !vorname.equals(null)) {
            if(passwort.equals(passwortwdh)) {
                
                try{
                    CreateConnection cc = new CreateConnection(hostDatenbank, nameDatenbank, benutzernameDatenbank, passwortDatenbank);
                    Connection con = cc.getConnection();
                    
                    Statement stmt = null;
                    String queryCheckAccount = "SELECT * FROM `accounts` WHERE `benutzername` = '" + benutzername + "'";
                    
                    stmt = con.createStatement();
                    ResultSet rs = stmt.executeQuery(queryCheckAccount);
                    if(!rs.isBeforeFirst()){ // keine Einträge mit dem selben Benutzernamen
                        
                        String queryCreateAccount = "INSERT INTO `accounts`(`benutzername`, `name`, `vorname`, `status`, `kennwort`, `notizen`, `erfasser`) VALUES ('" + benutzername + "', '" + name + "', '" + vorname + "', 3, md5('" + passwort + "'),'" + notizen + "', 0000)";
                        stmt = con.createStatement();
                        stmt.executeUpdate(queryCreateAccount);
                        
                        jTextField12.setText("Administrator-Account angelegt!");
                        jTextField12.setBackground(new Color(204,255,204));
                        enableBereichSpeicher(true);
                        jTabbedPane1.setSelectedIndex(2);
                        
                        
                    } else {
                        jTextField12.setText("Benutzername bereits vorhanden!");
                        jTextField12.setBackground(new Color(255,204,204));
                    }
                    stmt.close();
                    
                } catch(Exception e) {
                    System.out.println(e.toString());
                    jTextField12.setText("Fehler beim Erstellen des Accounts!");
                    jTextField12.setBackground(new Color(255,204,204));
                }
                
            } else {
                jTextField12.setText("Passwörter stimmen nicht überein!");
                jTextField12.setBackground(new Color(255,204,204));
            }
            
        } else {
            jTextField12.setText("Bitte alle Pflichtangaben ausfüllen!");
            jTextField12.setBackground(new Color(255,204,204));
        }
       
    }
    
    public void testSpeicher() {
        this.pfadSpeicher = jTextField2.getText();
        
        if(!this.pfadSpeicher.equals("") && !this.pfadSpeicher.equals(null)) {

            File f = new File(pfadSpeicher);
            if (f.exists() && f.isDirectory()) {
                jTextField8.setBackground(new Color(204,255,204));
                jTextField8.setText("Speicherort erfolgreich verbunden!");
                jButton6.setEnabled(true);
                jTabbedPane1.setSelectedIndex(3);
                
            } else {
                jTextField8.setBackground(new Color(255,204,204));
                jTextField8.setText("Bitte gültigen Pfad angeben!");
            }
            
        } else {
            jTextField8.setBackground(new Color(255,204,204));
            jTextField8.setText("Bitte Pfad angeben!");
        }
        
    }
    
    public void saveAndClose() {
        LogData ld = new LogData(hostDatenbank, nameDatenbank, benutzernameDatenbank, passwortDatenbank, pfadSpeicher);
        ld.saveData();
        
        LoginGui lg = new LoginGui();
        this.setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField3;
    private javax.swing.JPasswordField jPasswordField4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables
}
